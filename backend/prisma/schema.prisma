// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  fullName  String
  email     String    @unique
  phone     String?
  password  String
  role      Role      @default(USER)
  status    Status    @default(ACTIVE)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  lastLogin DateTime?

  // Relations
  events   Event[]   @relation("EventOrganizer")
  bookings Booking[]

  @@map("users")
}

model Event {
  id          String      @id @default(cuid())
  title       String
  description String
  date        DateTime
  time        String
  location    String
  capacity    Int
  price       Decimal     @db.Decimal(10, 2)
  status      EventStatus @default(UPCOMING)
  category    String
  imageUrl    String?
  organizerId String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // Relations
  organizer User      @relation("EventOrganizer", fields: [organizerId], references: [id])
  bookings  Booking[]

  @@map("events")
}

model Booking {
  id          String        @id @default(cuid())
  eventId     String
  userId      String
  ticketType  String
  quantity    Int
  totalAmount Decimal       @db.Decimal(10, 2)
  status      BookingStatus @default(PENDING)
  bookingDate DateTime      @default(now())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  // Relations
  event Event @relation(fields: [eventId], references: [id])
  user  User  @relation(fields: [userId], references: [id])

  @@map("bookings")
}

enum Role {
  USER
  ADMIN
}

enum Status {
  ACTIVE
  INACTIVE
}

enum EventStatus {
  UPCOMING
  ONGOING
  COMPLETED
  CANCELLED
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}
